# CMake Script by Olivier Le Doeuff - 2018
# INPUT : 
# DOXYGEN_BOOTSTRAP_COMPANY
# DOXYGEN_BOOTSTRAP_PUBLISHER
# DOXYGEN_BOOTSTRAP_PROJECT_NAME
# DOXYGEN_BOOTSTRAP_PROJECT_VERSION
# DOXYGEN_BOOTSTRAP_PROJECT_BRIEF
# DOXYGEN_BOOTSTRAP_PROJECT_LOGO
# DOXYGEN_BOOTSTRAP_OUTPUT_DIRECTORY
# DOXYGEN_BOOTSTRAP_SRC_DIRS
# DOXYGEN_BOOTSTRAP_README
# DOXYGEN_TARGET_PREFIX
# DOXYGEN_TARGET_SUFFIX
#
# OUTPUT:
# DOXYGEN_TARGET = ${DOXYGEN_TARGET_PREFIX}${DOXYGEN_BOOTSTRAP_PROJECT_NAME}${DOXYGEN_TARGET_SUFFIX}

# Require dot, treat the other components as optional
find_package(Doxygen)

IF(DOXYGEN_FOUND)
	MESSAGE(STATUS "Found Doxygen ${DOXYGEN_VERSION}")

    IF(NOT DOXYGEN_BOOTSTRAP_COMPANY)
        SET(DOXYGEN_BOOTSTRAP_COMPANY Company)
    ENDIF(NOT DOXYGEN_BOOTSTRAP_COMPANY)
    SET(DOXYGEN_BOOTSTRAP_COMPANY ${DOXYGEN_BOOTSTRAP_COMPANY} CACHE STRING "Company that publish the project. Default : Company")

    IF(NOT DOXYGEN_BOOTSTRAP_PUBLISHER)
        SET(DOXYGEN_BOOTSTRAP_PUBLISHER Publisher)
    ENDIF(NOT DOXYGEN_BOOTSTRAP_PUBLISHER)
        SET(DOXYGEN_BOOTSTRAP_PUBLISHER ${DOXYGEN_BOOTSTRAP_PUBLISHER} CACHE STRING "Publisher that publish the project. Default : Publisher")

    IF(NOT DOXYGEN_BOOTSTRAP_PROJECT_NAME)
        SET(DOXYGEN_BOOTSTRAP_PROJECT_NAME Project)
    ENDIF(NOT DOXYGEN_BOOTSTRAP_PROJECT_NAME)
    SET(DOXYGEN_BOOTSTRAP_PROJECT_NAME ${DOXYGEN_BOOTSTRAP_PROJECT_NAME} CACHE STRING "Name of the project. Default : Project")

    IF(NOT DOXYGEN_BOOTSTRAP_PROJECT_VERSION)
        SET(DOXYGEN_BOOTSTRAP_PROJECT_VERSION 1.0.0)
    ENDIF(NOT DOXYGEN_BOOTSTRAP_PROJECT_VERSION)
    SET(DOXYGEN_BOOTSTRAP_PROJECT_VERSION ${DOXYGEN_BOOTSTRAP_PROJECT_VERSION} CACHE STRING "Version of the project. Default : 1.0.0")

    IF(NOT DOXYGEN_BOOTSTRAP_PROJECT_BRIEF)
        SET(DOXYGEN_BOOTSTRAP_PROJECT_BRIEF Brief)
    ENDIF(NOT DOXYGEN_BOOTSTRAP_PROJECT_BRIEF)
    SET(DOXYGEN_BOOTSTRAP_PROJECT_BRIEF ${DOXYGEN_BOOTSTRAP_PROJECT_BRIEF} CACHE STRING "Brief of the project. Default : Brief")

    IF(NOT DOXYGEN_BOOTSTRAP_OUTPUT_DIRECTORY)
        SET(DOXYGEN_BOOTSTRAP_OUTPUT_DIRECTORY Docs)
    ENDIF(NOT DOXYGEN_BOOTSTRAP_OUTPUT_DIRECTORY)
    SET(DOXYGEN_BOOTSTRAP_OUTPUT_DIRECTORY ${DOXYGEN_BOOTSTRAP_OUTPUT_DIRECTORY} CACHE STRING "Output Directory for the doc of the project. Default : Docs")

    IF(NOT DOXYGEN_BOOTSTRAP_SRC_DIRS)
        SET(DOXYGEN_BOOTSTRAP_SRC_DIRS src)
    ENDIF(NOT DOXYGEN_BOOTSTRAP_SRC_DIRS)
    SET(DOXYGEN_BOOTSTRAP_SRC_DIRS ${DOXYGEN_BOOTSTRAP_SRC_DIRS} CACHE STRING "Source directories of the project. Default : src")

    IF(NOT DOXYGEN_BOOTSTRAP_README)
        SET(DOXYGEN_BOOTSTRAP_README README.md)
    ENDIF(NOT DOXYGEN_BOOTSTRAP_README)
    SET(DOXYGEN_BOOTSTRAP_README ${DOXYGEN_BOOTSTRAP_README} CACHE STRING "Markdown file for the first page. Default : README.md")

    SET(DOXYGEN_TARGET ${DOXYGEN_TARGET_PREFIX}${DOXYGEN_BOOTSTRAP_PROJECT_NAME}${DOXYGEN_TARGET_SUFFIX})
    
    MESSAGE( STATUS  "------ Doxygen Configuration v1.3.3 ------" )

    message(STATUS "DOXYGEN_BOOTSTRAP_COMPANY :           ${DOXYGEN_BOOTSTRAP_COMPANY}")
    message(STATUS "DOXYGEN_BOOTSTRAP_PUBLISHER :         ${DOXYGEN_BOOTSTRAP_PUBLISHER}")
    message(STATUS "DOXYGEN_BOOTSTRAP_PROJECT_NAME :      ${DOXYGEN_BOOTSTRAP_PROJECT_NAME}")
    message(STATUS "DOXYGEN_BOOTSTRAP_PROJECT_VERSION :   ${DOXYGEN_BOOTSTRAP_PROJECT_VERSION}")
    message(STATUS "DOXYGEN_BOOTSTRAP_PROJECT_BRIEF :     ${DOXYGEN_BOOTSTRAP_PROJECT_BRIEF}")
    message(STATUS "DOXYGEN_BOOTSTRAP_PROJECT_LOGO :      ${DOXYGEN_BOOTSTRAP_PROJECT_LOGO}")
    message(STATUS "DOXYGEN_BOOTSTRAP_OUTPUT_DIRECTORY :  ${DOXYGEN_BOOTSTRAP_OUTPUT_DIRECTORY}")
    message(STATUS "DOXYGEN_BOOTSTRAP_SRC_DIRS :          ${DOXYGEN_BOOTSTRAP_SRC_DIRS}")
    message(STATUS "DOXYGEN_BOOTSTRAP_README :            ${DOXYGEN_BOOTSTRAP_README}")
    message(STATUS "DOXYGEN_TARGET :                      ${DOXYGEN_TARGET}")

    MESSAGE( STATUS "------ Doxygen End Configuration ------" )

	# set input and output files
    set(DOXYGEN_IN ${CMAKE_CURRENT_SOURCE_DIR}/cmake/Doxyfile.in)
    set(DOXYGEN_OUT ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile)

    # request to configure the file
    configure_file(${DOXYGEN_IN} ${DOXYGEN_OUT} @ONLY)

	set(DOXYGEN_GENERATE_HTML YES)
	set(DOXYGEN_GENERATE_MAN YES)
	set(GENERATE_LATEX YES)

	# note the option ALL which allows to build the docs together with the application
    add_custom_target( ${DOXYGEN_TARGET} ALL
        COMMAND Doxygen::doxygen ${DOXYGEN_OUT}
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        COMMENT "Generating API documentation with Doxygen"
        VERBATIM )

ELSE(DOXYGEN_FOUND)
	MESSAGE(WARNING "Doxygen not found. Doc will not be generated. Please install Doxygen to generate doc")
ENDIF(DOXYGEN_FOUND)